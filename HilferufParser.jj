options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = true;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = true;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}
 
PARSER_BEGIN(HilferufParser)
 
public class HilferufParser {
 
  public static void main(String args[]) throws ParseException {
    System.out.println("Beenden Sie die Eingabe durch Return und dann Ctrl-Z (Windows) bzw. Ctrl-D (Unix):");
    HilferufParser parser = new HilferufParser(System.in);
    parser.Input();
  }
 
}
 
PARSER_END(HilferufParser)
 
SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}
 
TOKEN :
{
<A : "._#">     
|<B : "_...#"> 
|<C : "_._.#"> 
|<D : "_..#"> 
|<E : ".#"> 
|<F : ".._.#"> 
|<G : "__.#"> 
|<H : "....#"> 
|<I : "..#"> 
|<J : ".___#"> 
|<K : "_._#"> 
|<L : "._..#"> 
|<M : "__#"> 
|<P : ".__.#"> 
|<Q : "__._#"> 
|<R : "._.#"> 
|<T : "_#"> 
|<U : ".._#"> 
|<V : "..._#"> 
|<X : "_..._#"> 
|<Y : "_.__#">
|<Z : "__..#"> 
|<N : "_.#"> 
|<O : "___#"> 
|<S :"...#"> 
|<W : ".__#">
|<HASH: "#"> 
|<PUNKT: ["0"-"9"]"."["0"-"9"]>
|<ZAHL: ["0"-"9"]>
|<GRAD: "°">
|<SOS: "...#___#...#">
}

void Input() :
{}
{
	(  <HASH><HASH>(<ZAHL>)+ <GRAD>(<ZAHL>)+ <PUNKT>(<ZAHL>)+ <S>|<N>(<ZAHL>)+ <PUNKT>(<ZAHL>)+ <O>|<W> ( SOS ) ) <EOF>
}